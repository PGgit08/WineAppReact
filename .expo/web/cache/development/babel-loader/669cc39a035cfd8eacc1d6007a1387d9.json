{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _storage = require(\"./src/storage\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _navigations = require(\"./src/navigation/navigations\");\n\nvar _auth_context = require(\"./src/contexts/auth_context\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\peter\\\\Peter-First-App\\\\index.js\";\n\nvar init = function init() {\n  var token_promise = (0, _storage.Init)();\n  token_promise.then(function (val) {\n    if (val != null) {\n      return val;\n    } else {\n      return null;\n    }\n\n    ;\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nfunction App() {\n  var _isMounted = false;\n\n  var auth_context = _react.default.useContext(_auth_context.AuthContext);\n\n  (0, _react.useEffect)(function () {\n    _isMounted = true;\n\n    if (_isMounted) {\n      auth_context.change_context(init());\n    }\n\n    ;\n  });\n  console.log(auth_context.context);\n  var jwt = auth_context.context.jwt;\n  return _react.default.createElement(_native.NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, jwt == null ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_navigations.AuthFlow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_navigations.HomeFlow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), \";\");\n}\n\n;\n\nvar styles = _reactNative.StyleSheet.create({\n  msg: {\n    fontSize: 28\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nfunction Full_App() {\n  return _react.default.createElement(_auth_context.AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n}\n\n;\n\n_reactNative.AppRegistry.registerComponent(\"Peter-First-App\", function () {\n  return Full_App;\n});\n\nif (_reactNative.Platform.OS == \"web\") {\n  _reactNative.AppRegistry.runApplication(\"Peter-First-App\", {\n    rootTag: document.getElementById('root')\n  });\n}\n\n;","map":{"version":3,"sources":["C:/Users/peter/Peter-First-App/index.js"],"names":["init","token_promise","then","val","catch","err","console","log","App","_isMounted","auth_context","React","useContext","AuthContext","change_context","context","jwt","styles","StyleSheet","create","msg","fontSize","container","flex","justifyContent","alignItems","Full_App","AppRegistry","registerComponent","Platform","OS","runApplication","rootTag","document","getElementById"],"mappings":";;AAEA;;AAGA;;AAGA;;AACA;;AAGA;;AAGA;;;;AAUA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEf,MAAMC,aAAa,GAAG,oBAAtB;AAIAA,EAAAA,aAAa,CAACC,IAAd,CACI,UAACC,GAAD,EAAS;AACL,QAAGA,GAAG,IAAI,IAAV,EAAe;AACX,aAAOA,GAAP;AACH,KAFD,MAGI;AACA,aAAO,IAAP;AACH;;AAAA;AACJ,GARL,EASEC,KATF,CAUI,UAACC,GAAD,EAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAV/B;AAYH,CAlBD;;AAsBA,SAASG,GAAT,GAAc;AAEV,MAAIC,UAAU,GAAG,KAAjB;;AAGA,MAAMC,YAAY,GAAGC,eAAMC,UAAN,CAAiBC,yBAAjB,CAArB;;AAGA,wBAAU,YAAM;AACZJ,IAAAA,UAAU,GAAG,IAAb;;AAGA,QAAGA,UAAH,EAAc;AACVC,MAAAA,YAAY,CAACI,cAAb,CAA4Bd,IAAI,EAAhC;AACH;;AAAA;AACJ,GAPD;AAUAM,EAAAA,OAAO,CAACC,GAAR,CAAYG,YAAY,CAACK,OAAzB;AACA,MAAMC,GAAG,GAAGN,YAAY,CAACK,OAAb,CAAqBC,GAAjC;AAGA,SACI,6BAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,GAAG,IAAI,IAAP,GACG,4DACI,6BAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAKG,4DACI,6BAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANR,MADJ;AAaH;;AAAA;;AAED,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC7BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GADwB;AAI7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH;AAJkB,CAAlB,CAAf;;AAYA,SAASC,QAAT,GAAmB;AACf,SACI,6BAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAAA;;AAQDC,yBAAYC,iBAAZ,CAA8B,iBAA9B,EAAiD;AAAA,SAAMF,QAAN;AAAA,CAAjD;;AAGA,IAAIG,sBAASC,EAAT,IAAe,KAAnB,EAAyB;AACrBH,2BAAYI,cAAZ,CAA2B,iBAA3B,EAA8C;AAC1CC,IAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB;AADiC,GAA9C;AAGH;;AAAA","sourcesContent":["// imports\r\n// react as usual\r\nimport React, { useEffect } from 'react';\r\n\r\n// storage imports\r\nimport { Init } from './src/storage';\r\n\r\n// navigation imports\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { HomeFlow, AuthFlow } from './src/navigation/navigations';\r\n\r\n// context imports\r\nimport { AuthContext, AuthProvider } from './src/contexts/auth_context';\r\n\r\n// gui just for tests\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    AppRegistry,\r\n    Platform\r\n} from \"react-native\";\r\n\r\n// init function\r\n// checks if person logged in or not\r\nconst init = () => {\r\n    // this promise is an asyncstorage promise(returned)\r\n    const token_promise = Init();\r\n\r\n    // check promise if it has loaded\r\n    // or gotten an error\r\n    token_promise.then(\r\n        (val) => {\r\n            if(val != null){\r\n                return val;\r\n            }\r\n            else{\r\n                return null;\r\n            };\r\n        }\r\n    ).catch(\r\n        (err) => {console.log(err)}\r\n    );\r\n};\r\n\r\n\r\n// App function\r\nfunction App(){\r\n    // check whether component is mounted or not\r\n    let _isMounted = false;\r\n\r\n    // load the context state and changer(basically Context.Consumer)\r\n    const auth_context = React.useContext(AuthContext);\r\n    \r\n    // only do this once app is done rendering\r\n    useEffect(() => {\r\n        _isMounted = true;\r\n        // change context's state to what init\r\n        // function returns\r\n        if(_isMounted){\r\n            auth_context.change_context(init());\r\n        };\r\n    });\r\n    \r\n    // then load the context's state\r\n    console.log(auth_context.context);\r\n    const jwt = auth_context.context.jwt;\r\n\r\n    // return container, checking whether jwt exists or not\r\n    return(\r\n        <NavigationContainer>\r\n            {jwt == null ? (\r\n                <>\r\n                    <AuthFlow/>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <HomeFlow/>\r\n                </>\r\n            )};\r\n        </NavigationContainer>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    msg: {\r\n      fontSize: 28\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    }\r\n});\r\n\r\n// full function for loading everything\r\nfunction Full_App(){\r\n    return (\r\n        <AuthProvider>\r\n            <App />\r\n        </AuthProvider>\r\n    );\r\n};\r\n\r\n\r\n// expo uses this registry method instead of registry component\r\n// when app launches maybe registry component will work\r\n// registerRootComponent(App);\r\n\r\n// for web\r\nAppRegistry.registerComponent(\"Peter-First-App\", () => Full_App);\r\n\r\n\r\nif (Platform.OS == \"web\"){\r\n    AppRegistry.runApplication(\"Peter-First-App\", {\r\n        rootTag: document.getElementById('root')\r\n    });\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}