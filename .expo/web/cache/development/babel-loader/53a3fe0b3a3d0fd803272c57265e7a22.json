{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = API_ErrorHandler;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _main_context = require(\"../contexts/main_context\");\n\nfunction API_ErrorHandler() {\n  var back_end, Backend_Refresh, alertError;\n  return _regenerator.default.async(function API_ErrorHandler$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          back_end = (0, _react.useContext)(_main_context.MainContext).state.back_end;\n          console.log(back_end);\n          Backend_Refresh = (0, _react.useContext)(_main_context.MainContext).actions.Backend_Refresh;\n\n          alertError = function alertError() {\n            _reactNative.Alert.alert(\"Error\", back_end.errorMsg, [{\n              text: \"Try Again\",\n              onPress: Backend_Refresh\n            }]);\n          };\n\n          return _context.abrupt(\"return\", _react.default.createElement(_react.default.Fragment, null, back_end.isError === true ? _react.default.createElement(_react.default.Fragment, null, alertError(), \";\") : _react.default.createElement(_react.default.Fragment, null), \";\"));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\n;","map":{"version":3,"sources":["C:/Users/peter/Peter-First-App/src/api_handling/ErrorHandler.js"],"names":["API_ErrorHandler","back_end","MainContext","state","console","log","Backend_Refresh","actions","alertError","Alert","alert","errorMsg","text","onPress","isError"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAGe,SAAeA,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,UAAAA,QADK,GACM,uBAAWC,yBAAX,EAAwBC,KAAxB,CAA8BF,QADpC;AAEXG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACQK,UAAAA,eAHG,GAGiB,uBAAWJ,yBAAX,EAAwBK,OAHzC,CAGHD,eAHG;;AAKLE,UAAAA,UALK,GAKQ,SAAbA,UAAa,GAAM;AACrBC,+BAAMC,KAAN,CACI,OADJ,EAEIT,QAAQ,CAACU,QAFb,EAGI,CAAC;AACGC,cAAAA,IAAI,EAAE,WADT;AAEGC,cAAAA,OAAO,EAAEP;AAFZ,aAAD,CAHJ;AASH,WAfU;;AAAA,2CAkBP,4DAEKL,QAAQ,CAACa,OAAT,KAAqB,IAArB,GACG,4DACKN,UAAU,EADf,MADH,GAKG,2DAPR,MAlBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCd","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Alert } from 'react-native';\r\nimport { MainContext } from '../contexts/main_context';\r\n\r\n\r\nexport default async function API_ErrorHandler(){\r\n    const back_end = useContext(MainContext).state.back_end;\r\n    console.log(back_end)\r\n    const { Backend_Refresh } = useContext(MainContext).actions;\r\n\r\n    const alertError = () => {\r\n        Alert.alert(\r\n            \"Error\",\r\n            back_end.errorMsg,\r\n            [{\r\n                text: \"Try Again\",\r\n                onPress: Backend_Refresh\r\n\r\n            }]\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* basic error, like this user already exists */}\r\n            {back_end.isError === true ? (\r\n                <>\r\n                    {alertError()};\r\n                </>\r\n            ) : (\r\n                <>\r\n                </>\r\n            )};\r\n            {/* advanced error, like 404 or internal 500 */}\r\n            {/* {back_end.isError_complex === true ? } */}\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"script"}