{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = API_ErrorHandler;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _main_context = require(\"../contexts/main_context\");\n\nfunction API_ErrorHandler() {\n  var back_end = (0, _react.useContext)(_main_context.MainContext).state.back_end;\n  var Backend_Refresh = (0, _react.useContext)(_main_context.MainContext).actions.Backend_Refresh;\n\n  var alertError = function alertError() {\n    _reactNative.Alert.alert(\"Error\", back_end.errorMsg, [{\n      text: \"Try Again\",\n      onPress: Backend_Refresh\n    }]);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, back_end.isError === true ? _react.default.createElement(_react.default.Fragment, null, alert(back_end.errorMsg), Backend_Refresh()) : _react.default.createElement(_react.default.Fragment, null), \";\");\n}\n\n;","map":{"version":3,"sources":["C:/Users/peter/Peter-First-App/src/api_handling/ErrorHandler.js"],"names":["API_ErrorHandler","back_end","MainContext","state","Backend_Refresh","actions","alertError","Alert","alert","errorMsg","text","onPress","isError"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEe,SAASA,gBAAT,GAA2B;AACtC,MAAMC,QAAQ,GAAG,uBAAWC,yBAAX,EAAwBC,KAAxB,CAA8BF,QAA/C;AADsC,MAG9BG,eAH8B,GAGV,uBAAWF,yBAAX,EAAwBG,OAHd,CAG9BD,eAH8B;;AAKtC,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,uBAAMC,KAAN,CACI,OADJ,EAEIP,QAAQ,CAACQ,QAFb,EAGI,CAAC;AACGC,MAAAA,IAAI,EAAE,WADT;AAEGC,MAAAA,OAAO,EAAEP;AAFZ,KAAD,CAHJ;AASH,GAVD;;AAYA,SACI,4DAEKH,QAAQ,CAACW,OAAT,KAAqB,IAArB,GACG,4DACKJ,KAAK,CAACP,QAAQ,CAACQ,QAAV,CADV,EAEKL,eAAe,EAFpB,CADH,GAMG,2DARR,MADJ;AAgBH;;AAAA","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Alert, Button, View } from 'react-native';\r\nimport { MainContext } from '../contexts/main_context';\r\n\r\nexport default function API_ErrorHandler(){\r\n    const back_end = useContext(MainContext).state.back_end;\r\n    // console.log(useContext(MainContext));\r\n    const { Backend_Refresh } = useContext(MainContext).actions;\r\n\r\n    const alertError = () => {\r\n        Alert.alert(\r\n            \"Error\",\r\n            back_end.errorMsg,\r\n            [{\r\n                text: \"Try Again\",\r\n                onPress: Backend_Refresh\r\n\r\n            }]\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* basic error, like this user already exists */}\r\n            {back_end.isError === true ? (\r\n                <>\r\n                    {alert(back_end.errorMsg)}\r\n                    {Backend_Refresh()}  \r\n                </>\r\n            ) : (\r\n                <>\r\n                </>\r\n            )};\r\n            {/* advanced error, like 404 or internal 500 */}\r\n            {/* {back_end.isError_complex === true ? } */}\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"script"}