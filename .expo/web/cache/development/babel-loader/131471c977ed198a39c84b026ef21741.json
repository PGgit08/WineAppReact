{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\peter\\\\Peter-First-App\\\\src\\\\screens\\\\Init.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport goAuth from \"../navigation\";\nimport USER_KEY from \"../config\";\n\nvar Initializing = function (_Component) {\n  _inherits(Initializing, _Component);\n\n  var _super = _createSuper(Initializing);\n\n  function Initializing() {\n    _classCallCheck(this, Initializing);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Initializing, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.welcome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, \"Loading...\"));\n    }\n  }]);\n\n  return Initializing;\n}(Component);\n\nexport { Initializing as default };\nvar styles = StyleSheet.create({\n  welcome: {\n    fontSize: 28\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/peter/Peter-First-App/src/screens/Init.js"],"names":["React","Component","AsyncStorage","goAuth","USER_KEY","Initializing","styles","container","welcome","StyleSheet","create","fontSize","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAMA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;;IAEqBC,Y;;;;;;;;;;;;;6BAsBT;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;;;;EA5BqCP,S;;SAArBI,Y;AAiCrB,IAAMC,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,OAAO,EAAE;AACPG,IAAAA,QAAQ,EAAE;AADH,GADoB;AAI7BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH;AAJkB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport goAuth from '../navigation';\r\nimport USER_KEY from '../config'\r\n\r\nexport default class Initializing extends Component{\r\n    // componentDidMount() {\r\n    //     // here check if the\r\n    //     // user is logged in already \r\n    //     // or not\r\n    //     try{\r\n    //         const user = await AsyncStorage.getItem(USER_KEY);\r\n    //         if(user){\r\n    //             // code later here will return the user home\r\n    //             console.log('user', user);\r\n    //         }\r\n    //         else{\r\n    //             // if user is not logged in\r\n    //             goAuth();\r\n    //         };\r\n    //     }\r\n    //     catch(err){\r\n    //         console.log(err);\r\n    //         goAuth();\r\n    //     };\r\n    // };\r\n\r\n    render(){\r\n        return(\r\n            <View style={styles.container}>\r\n                <Text style={styles.welcome}>Loading...</Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n}\r\n\r\n// create styles for the render func\r\nconst styles = StyleSheet.create({\r\n    welcome: {\r\n      fontSize: 28\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}