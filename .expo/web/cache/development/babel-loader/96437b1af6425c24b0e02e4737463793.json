{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorContext = ErrorContext;\nexports.default = API_ErrorHandler;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _main_context = require(\"../contexts/main_context\");\n\nfunction ErrorContext(Error_Obj) {\n  var dummy_error_obj = {\n    is_Error: true,\n    errorMsg: Error_Obj.msg\n  };\n  var Backend_Update = (0, _react.useContext)(_main_context.MainContext).actions.Backend_Update;\n  Backend_Update(dummy_error_obj);\n}\n\n;\n\nfunction API_ErrorHandler() {\n  var back_end = (0, _react.useContext)(_main_context.MainContext).state.back_end;\n  var Backend_Refresh = (0, _react.useContext)(_main_context.MainContext).actions.Backend_Refresh;\n\n  var alertError = function alertError() {\n    _reactNative.Alert.alert(\"Error\", back_end.errorMsg, [{\n      text: \"Try Again\",\n      onPress: Backend_Refresh\n    }]);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, back_end.isError === true ? _react.default.createElement(_react.default.Fragment, null, alertError(), \";\") : _react.default.createElement(_react.default.Fragment, null), \";\");\n}\n\n;","map":{"version":3,"sources":["C:/Users/peter/Peter-First-App/src/api_handling/ErrorHandler.js"],"names":["ErrorContext","Error_Obj","dummy_error_obj","is_Error","errorMsg","msg","Backend_Update","MainContext","actions","API_ErrorHandler","back_end","state","Backend_Refresh","alertError","Alert","alert","text","onPress","isError"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAGO,SAASA,YAAT,CAAsBC,SAAtB,EAAgC;AAGnC,MAAIC,eAAe,GAAG;AAClBC,IAAAA,QAAQ,EAAE,IADQ;AAElBC,IAAAA,QAAQ,EAAEH,SAAS,CAACI;AAFF,GAAtB;AAHmC,MAS3BC,cAT2B,GASR,uBAAWC,yBAAX,EAAwBC,OAThB,CAS3BF,cAT2B;AAYnCA,EAAAA,cAAc,CAACJ,eAAD,CAAd;AACH;;AAAA;;AAEc,SAASO,gBAAT,GAA2B;AAAA,MAC9BC,QAD8B,GACjB,uBAAWH,yBAAX,EAAwBI,KADP,CAC9BD,QAD8B;AAAA,MAE9BE,eAF8B,GAEV,uBAAWL,yBAAX,EAAwBC,OAFd,CAE9BI,eAF8B;;AAItC,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,uBAAMC,KAAN,CACI,OADJ,EAEIL,QAAQ,CAACN,QAFb,EAGI,CAAC;AACGY,MAAAA,IAAI,EAAE,WADT;AAEGC,MAAAA,OAAO,EAAEL;AAFZ,KAAD,CAHJ;AASH,GAVD;;AAYA,SACI,4DAEKF,QAAQ,CAACQ,OAAT,KAAqB,IAArB,GACG,4DACKL,UAAU,EADf,MADH,GAKG,2DAPR,MADJ;AAeH;;AAAA","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Alert } from 'react-native';\r\nimport { MainContext } from '../contexts/main_context';\r\n\r\n\r\nexport function ErrorContext(Error_Obj){\r\n    // to change the context based on\r\n    // error from api\r\n    let dummy_error_obj = {\r\n        is_Error: true,\r\n        errorMsg: Error_Obj.msg\r\n    };\r\n\r\n    // get function\r\n    const { Backend_Update } = useContext(MainContext).actions; \r\n    \r\n    // update Context\r\n    Backend_Update(dummy_error_obj);\r\n};\r\n\r\nexport default function API_ErrorHandler(){\r\n    const { back_end } = useContext(MainContext).state;\r\n    const { Backend_Refresh } = useContext(MainContext).actions;\r\n\r\n    const alertError = () => {\r\n        Alert.alert(\r\n            \"Error\",\r\n            back_end.errorMsg,\r\n            [{\r\n                text: \"Try Again\",\r\n                onPress: Backend_Refresh\r\n\r\n            }]\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* basic error, like this user already exists */}\r\n            {back_end.isError === true ? (\r\n                <>\r\n                    {alertError()};\r\n                </>\r\n            ) : (\r\n                <>\r\n                </>\r\n            )};\r\n            {/* advanced error, like 404 or internal 500 */}\r\n            {/* {back_end.isError_complex === true ? } */}\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"script"}